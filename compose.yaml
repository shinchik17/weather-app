name: weather

services:

  app:
    image: shinchik17/weather-app
    container_name: tomcat_app
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
        restart: true
    ports:
      - "80:8080"
    environment:
      - BCRYPT_SALT=${BCRYPT_SALT}
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      - DS_PASSWORD=${DS_PASSWORD}
      - DS_URL=${DS_URL}
    networks:
      - default
    labels:
      - "com.centurylinklabs.watchtower.enable=true"


  db:
    image: postgres:15
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DS_PASSWORD}
    restart: unless-stopped
    ports:
      - "5432:5432"
    networks:
      - default
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 5s
      retries: 5
      start_period: 30s
      timeout: 10s

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    environment:
      - REPO_USER=${DOCKERHUB_USER}
      - REPO_PASSWORD=${DOCKERHUB_PASSWORD}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup --interval 60 --label-enable


networks:
  default:
    driver: bridge


volumes:
  db-data: